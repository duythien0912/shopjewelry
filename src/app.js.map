{"version":3,"sources":["../src/app.js"],"names":["require","config","app","HOST","process","env","PORT","use","bodyParser","json","urlencoded","extended","path","join","__dirname","express","static","mongoose","connect","DB_HOST","db","connection","on","console","error","bind","user","image","get","req","res","sendFile","FRONTEND_HOST","next","err","Error","status","listen","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEAA,QAAQ,QAAR,EAAkBC,MAAlB;;AAEA,IAAMC,MAAM,wBAAZ;AACA,IAAMC,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;;AAEAJ,IAAIK,GAAJ,CAAQ,4BAAR;AACAL,IAAIK,GAAJ,CAAQ,uBAAR;AACAL,IAAIK,GAAJ,CAAQ,sBAAO,UAAP,CAAR;AACAL,IAAIK,GAAJ,CAAQ,qBAAR;AACAL,IAAIK,GAAJ,CAAQC,qBAAWC,IAAX,EAAR;AACAP,IAAIK,GAAJ,CAAQC,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAT,IAAIK,GAAJ,CAAQ,6BAAR;AACAL,IAAIK,GAAJ,CAAQ,kCAAR;AACAL,IAAIK,GAAJ,CAAQ,4BAAQK,eAAKC,IAAL,CAAUC,SAAV,EAAqB,cAArB,EAAqC,WAArC,CAAR,CAAR;AACAZ,IAAIK,GAAJ,CAAQQ,kBAAQC,MAAR,CAAeJ,eAAKC,IAAL,CAAUC,SAAV,EAAqB,eAArB,CAAf,CAAR;AACAZ,IAAIK,GAAJ,CAAQ,SAAR,EAAmBQ,kBAAQC,MAAR,CAAe,QAAf,CAAnB;;AAEAC,mBAASC,OAAT,CAAiBd,QAAQC,GAAR,CAAYc,OAA7B;AACA,IAAMC,KAAKH,mBAASI,UAApB;AACAD,GAAGE,EAAH,CAAM,OAAN,EAAeC,QAAQC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,2BAA5B,CAAf;;AAEArB,IAAIK,GAAJ,CAAQ,WAAR,EAAqBmB,oBAArB;AACAxB,IAAIK,GAAJ,CAAQ,GAAR,EAAaoB,qBAAb;AACAzB,IAAI0B,GAAJ,CAAQ,IAAR,EAAc,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BA,MAAIC,QAAJ,CAAanB,eAAKC,IAAL,CAAUC,SAAV,EAAqBV,QAAQC,GAAR,CAAY2B,aAAjC,CAAb;AACD,CAFD;;AAIA9B,IAAIK,GAAJ,CAAQ,UAACsB,GAAD,EAAMC,GAAN,EAAWG,IAAX,EAAoB;AAC1B,MAAMC,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAZ;AACAD,MAAIE,MAAJ,GAAa,GAAb;AACAH,OAAKC,GAAL;AACD,CAJD;;AAMAhC,IAAImC,MAAJ,CAAWlC,IAAX,EAAiB;AAAA,SAAMoB,QAAQe,GAAR,6BAAsCnC,IAAtC,CAAN;AAAA,CAAjB","file":"app.js","sourcesContent":["import express from \"express\";\nimport compression from \"compression\";\nimport helmet from \"helmet\";\nimport path from \"path\";\nimport favicon from \"serve-favicon\";\nimport logger from \"morgan\";\nimport cookieParser from \"cookie-parser\";\nimport bodyParser from \"body-parser\";\nimport fileUpload from \"express-fileupload\";\nimport cors from \"cors\";\nimport mongoose from \"mongoose\";\n\nimport user from \"./routes/userRoutes\";\nimport image from \"./routes/imageRoutes\";\n\nrequire(\"dotenv\").config();\n\nconst app = express();\nconst HOST = process.env.PORT || 8080;\n\napp.use(compression());\napp.use(helmet());\napp.use(logger(\"combined\"));\napp.use(cors());\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(fileUpload());\napp.use(favicon(path.join(__dirname, 'views/client', 'logo2.png')))\napp.use(express.static(path.join(__dirname, \"/views/client\")));\napp.use(\"/public\", express.static(\"public\"));\n\nmongoose.connect(process.env.DB_HOST);\nconst db = mongoose.connection;\ndb.on(\"error\", console.error.bind(console, \"MongoDB connection error:\"));\n\napp.use(\"/api/user\", user);\napp.use(\"/\", image);\napp.get(\"/*\", (req, res) => {\n  res.sendFile(path.join(__dirname, process.env.FRONTEND_HOST));\n});\n\napp.use((req, res, next) => {\n  const err = new Error(\"Not Found\");\n  err.status = 404;\n  next(err);\n});\n\napp.listen(HOST, () => console.log(`app start running in : ${HOST}`));"]}